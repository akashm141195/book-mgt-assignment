name: Deploy to EC2

on:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Unittest
      run: |
        cd src
        pip install pytest==8.2.2
        pip install -r requirements.txt
        pytest -vvv unittest_api.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/book-mgt-image:latest

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Connect to EC2 and update container
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        KEY: ${{ secrets.EC2_KEY }}
        IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/book-mgt-image:latest
      run: |
        echo "${KEY}" > private_key.pem
        chmod 600 private_key.pem
        cat private_key.pem
        echo ${USER}
        echo ${HOST}
        ssh -o StrictHostKeyChecking=no -tt -i private_key.pem ${USER}@${HOST} << 'EOF'
          # Test
          #touch /tmp/connected.txt
          container_status_failed=$(docker ps -a|grep flask_application_container|wc -l)
          container_status_running=$(docker ps|grep flask_application_container|wc -l)
          if [ $container_status_running -eq 1 ]; then docker stop flask_application_container && docker rm flask_application_container; elif [ $container_status_failed -eq 1 ]; then docker rm flask_application_container; else echo "No running containers"; fi
          docker pull akashm141195/book-mgt-image:latest
          docker run -d --name flask_application_container -p 8000:8000 akashm141195/book-mgt-image:latest
          exit
        EOF

    - name: Clean up
      run: rm private_key.pem
